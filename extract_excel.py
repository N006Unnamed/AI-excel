import pandas as pd
from io import StringIO

# 您的表格数据
data = """
Unnamed: 0  Unnamed: 1  合计         2026         2027         2028        2029         2030          2031         2032          2033         2034         2035          2036         2037         2038         2039  Unnamed: 17
         二        成本估算 3622.304528  3622.304528  3622.304528  3622.304528  3622.304528  3622.304528  3622.304528  3622.304528  3622.304528  3622.304528  3622.304528  3622.304528  3622.304528  3622.304528         0.00
         1        人工成本 9255.333982  660.000000  660.000000  660.000000  673.200000  673.200000   673.200000  686.664000   686.664000  686.664000  700.397280   700.397280  700.397280  714.405226  714.405226         0.00
         2        劳务外包 7423.509418  510.000000  510.000000  510.000000  520.200000  530.604000   541.216080  552.040402   563.081210  574.342834  585.829691   597.546284  609.497210  621.687154  634.120897         0.00
         3   营销费用、活动费用 5300.000060  500.000000  500.000000  500.000000  300.000000  300.000000   300.000000  500.000000   300.000000  300.000000  300.000000   500.000000  300.000000  300.000000  300.000000         0.06
         5     夜秀经营性成本 1120.602600   74.706840   74.706840   74.706840   74.706840   74.706840    74.706840   74.706840    74.706840   74.706840   74.706840    74.706840   74.706840   74.706840   74.706840         0.09
         6       办公管理费 5321.924018  300.000000  309.000000  318.270000  327.818100  337.652643   347.782222  358.215689   368.962160  380.031024  391.431955   403.174914  415.270161  427.728266  440.560114         0.06
         7        水电能耗 4200.000130  300.000000  300.000000  300.000000  300.000000  300.000000   300.000000  300.000000   300.000000  300.000000  300.000000   300.000000  300.000000  300.000000  300.000000         0.13
         8     维修保养及其他 3700.000090  200.000000  200.000000  200.000000  300.000000  300.000000   300.000000  300.000000   300.000000  300.000000  300.000000   300.000000  300.000000  300.000000  300.000000         0.09
         9        迭代成本 3675.000130    0.000000    0.000000  425.000000  500.000000    0.000000   425.000000    0.000000  1000.000000  425.000000    0.000000     0.000000  925.000000    0.000000    0.000000         0.13
        10     宋彩道租金成本 1365.193818   87.300000   87.300000   87.300000   91.665000   91.665000    91.665000   96.248250    96.248250   96.248250  101.060663   101.060663  101.060663  106.113696  106.113696         0.06
        11  爱梅路&彩陶路租金成本  4647.785772  297.145800  297.145800  297.145800  312.003090  312.003090   312.003090  327.603245   327.603245  327.603245  343.983407   343.983407  343.983407  361.182577  361.182577         0.06
        12     停车场租金成本 3753.933672  239.946048  239.946048  239.946048  251.943350  251.943350   251.943350  264.540518   264.540518  264.540518  277.767544   277.767544  277.767544  291.655921  291.655921         0.06
        13      公寓租金成本 7586.714823  483.600000  483.600000  483.600000  507.780000  507.780000   507.780000  533.169000   533.169000  533.169000  559.827450   559.827450  559.827450  587.818823  587.818823         0.06
        14      公寓运营成本 4975.200060  270.000000  270.000000  270.000000  270.000000  270.000000   345.600000  345.600000   345.600000  345.600000  345.600000   453.600000  453.600000  453.600000  453.600000         0.06
        15      公寓迭代成本 1000.000130    0.000000    0.000000    0.000000    0.000000    0.000000  1000.000000    0.000000     0.000000    0.000000    0.000000  1000.000000    0.000000    0.000000    0.000000         0.13
        16     梅沙湖维护成本 2800.000060  200.000000  200.000000  200.000000  200.000000  200.000000   200.000000  200.000000   200.000000  200.000000  200.000000   200.000000  200.000000  200.000000  200.000000         0.06
"""

# 使用StringIO将字符串转换为类似文件的对象
data_io = StringIO(data.strip())

# 读取数据到DataFrame
# 设置分隔符为多个空格，跳过初始空格，并处理不规则列名
df = pd.read_csv(
    data_io,
    sep=r'\s{2,}',  # 匹配2个或更多连续空格作为分隔符
    engine='python',
    skipinitialspace=True,
    header=0,
    dtype=str  # 先读取为字符串，后续再转换类型
)

# 重命名列
df.columns = ['序号', '项目', '合计'] + [f'年份_{i}' for i in range(2026, 2040)] + ['备注']

# 保存为Excel文件
excel_file = '成本估算数据.xlsx'
df.to_excel(excel_file, index=False)

print(f"Excel文件已成功保存到: {excel_file}")